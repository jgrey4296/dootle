[project]
name            = "dootle"
version         = "0.1.0"
description     = ""
readme          = "README.md"
requires-python = ">=3.11"
license         = {file = "LICENSE"}
keywords        = []
authors         = [
  {name  = "John Grey", email = "jgrey.n.plus.one@gmail.com"},
]

classifiers     = [
  "Programming Language :: Python"
]

dependencies   = [
    "doot @ git+https://github.com/jgrey4296/doot.git , python_version >= 3.10 ",
    "itemadapter",
    "w3lib",
]

[project.optional-dependencies]
dev      = [ "doot@git+https://github.com/jgrey4296/doot.git", "pipreqs", "sphinx" ]
test     = [ "pytest > 7.0" ]
database = [ "pony, python_version <= 3.10" ]
image    = ["Pillow"]
net      = ["Requests", "beautifulsoup4", "scrapy"]
bibtex   = ["bibtexparser", "pylatexenc"]
social   = ["mastodon.py>=1.8"]
data     = ["PyYAML", "pandas", "numpy", "scikit-learn", "xsdata", "networkx"]
visual   = ["matplotlib", "seaborn", "wordcloud"]
pdf      = ["pdfrw", "pypandoc"]


##-- urls
[project.urls]
homepage      = "https://github.com/jgrey4296/dootle"                     # TODO
documentation = "https://readthedocs.org/dootle"                          # TODO
repository    = "https://github.com/jgrey4296/dootle"                     # TODO
changelog     = "https://github.com//dootle/blob/master/CHANGELOG.md" # TODO

##-- end urls

##-- scripts
[project.scripts]

##-- end scripts

##-- build-system
[build-system]
requires = [
         "setuptools >= 63.1.0",
         "wheel >= 0.37.1"
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where      = ["."]
include    = ["dootle*"]

[tool.setuptools.package-data]
"*" = ["*"]
"dootle.__data"    = ["*.so"]

[tool.setuptools.exclude-package-data]

##-- end build-system

# Tools #######################################################################

##-- pyright
[tool.pyright]
# strict = dootle.*
verboseOutput               = true
typeCheckingMode            = "strict"
pythonVersion               = "3.10"

reportUnusedImport          = false
reportAssertAlwaysTrue      = "information"
reportMissingParameterType  = "warning"
reportMissingTypeArgument   = "warning"
reportMissingTypeStubs      = "warning"
reportUnknownMemberType     = "warning"
reportUnknownParameterType  = "information"
reportUnknownVariableType   = "warning"
reportUnnecessaryCast       = "information"
reportUnnecessaryIsInstance = "warning"

##-- end pyright

##-- mypy
# https://mypy.readthedocs.io/en/stable/config_file.html#config-file
[mypy]
python_version      = 3.10
warn_return_any     = true
warn_unused_configs = true

# Per-module options:
[mypy-pyparsing]
ignore_missing_imports = true

##-- end mypy

##-- pytest
[tool.pytest.ini_options]
log_cli       = false
log_level     = "DEBUG"
log_cli_level = "DEBUG"

##-- end pytest

##-- sphinx
[tool.sphinx]
author     = "John Grey"
copyright  = "2023-05-02"
extensions = ['sphinx.ext.doctest', 'sphinx.ext.autodoc', 'sphinx.ext.autosummary', 'sphinx.ext.napoleon']
templates  = ['_templates']
exclude    = ['**/flycheck_*.py']

[tool.sphinx.autosummary]
generate = true

[tool.sphinx.autodoc]
add_module_names   = false
inherit_docstrings = true

[tool.sphinx.autodoc.defaults]
members           = true
undoc-members     = true
private-members   = false
special-members   = false
inherited-members = true
show-inheritance  = true

[tool.sphinx.html]
theme       = 'alabaster'
static      = ['_static']

[tool.sphinx.html.options]

##-- end sphinx
