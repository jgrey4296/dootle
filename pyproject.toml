[project]
name            = "dootle"
version         = "0.1.2"
description     = "A Library of extensions for Doot task running"
readme          = "README.md"
requires-python = ">=3.11"
license         = {file = "LICENSE"}
keywords        = []
authors         = [
  {name  = "John Grey", email = "jgrey.n.plus.one@gmail.com"},
]

classifiers     = [
  "Programming Language :: Python"
]

dependencies   = [
    "doot>=0.12",
    "jgdv>0.2",
    "itemadapter",
    "w3lib",
    "pony",
    "scrapy",
    "mastodon.py>=1.8",
    "bibtexparser>=2.0.0b4",
    "numpy",
    "networkx",
    "polars",
    "jsonlines",
]

[project.optional-dependencies]
dev      = ["pipreqs", "sphinx" ]
test     = ["pytest > 7.0" ]
image    = ["Pillow"]
net      = ["Requests", "beautifulsoup4"]
bibtex   = ["bibtexparser", "pylatexenc"]
data     = ["PyYAML", "pandas", "scikit-learn", "xsdata"]
visual   = ["matplotlib", "seaborn", "wordcloud"]
pdf      = ["pdfrw", "pypandoc"]

##-- urls
[project.urls]
homepage      = "https://github.com/jgrey4296/dootle"                     # TODO
documentation = "https://readthedocs.org/dootle"                          # TODO
repository    = "https://github.com/jgrey4296/dootle"                     # TODO
changelog     = "https://github.com//dootle/blob/master/CHANGELOG.md" # TODO

##-- end urls

##-- scripts
[project.scripts]

##-- end scripts

##-- entry-points
[project.entry-points."doot.plugins.command"]
# example = "dootle.cmds.example_cmd:ExampleCmd"

[project.entry-points."doot.plugins.action"]
rng         = "dootle.actions.nprandom:new_random"
say         = "dootle.actions.say:say"
"mamba.env" = "dootle.python.mamba:MambaEnv"

##-- end entry-points

##-- build-system
[build-system]
requires = [
         "setuptools >= 63.1.0",
         "wheel >= 0.37.1"
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where      = ["."]
include    = ["dootle*"]

[tool.setuptools.package-data]
"*" = ["*"]
"dootle.__data"    = ["*.so"]

[tool.setuptools.exclude-package-data]

##-- end build-system

# Tools #######################################################################

##-- pytest
[tool.pytest.ini_options]
log_cli       = false
log_level     = "DEBUG"
log_cli_level = "DEBUG"

##-- end pytest

##-- bumpver
[tool.bumpver]
current_version    = "0.1.2"
version_pattern    = "MAJOR.MINOR.PATCH"
commit_message     = "[bump]: version {old_version} -> {new_version}"
tag_message        = "{new_version}"
tag_scope          = "default"
commit             = true
tag                = false
# pre_commit_hook  = ""
# post_commit_hook = ""
# push             = true

[tool.bumpver.file_patterns]
"pyproject.toml"   = [
                   '^version\s+=\s+"{version}"',
                   '^current_version\s+=\s+"{version}"'
]
"dootle/__init__.py" = ['^__version__\s+=\s+"{version}"']

##-- end bumpver

##-- isort
# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
color_output           = false
py_version             = 311
# profile                = "hug"
comment_prefix         = "# "
sections               = [
"FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"
]
default_section        = "THIRDPARTY"
lines_after_imports    = -1
lines_between_sections = 1
lines_between_types    = 0

import_heading_future      = "Imports:"
import_heading_stdlib      = "##-- stdlib imports"
import_heading_thirdparty  = "##-- 3rd party imports"
import_heading_firstparty  = "##-- 1st party imports"
import_heading_localfolder = ""

import_footer_future      = ""
import_footer_stdlib      = "##-- end stdlib imports"
import_footer_thirdparty  = "##-- end 3rd party imports"
import_footer_firstparty  = "##-- end 1st party imports"
import_footer_localfolder = ""

add_imports            = [
"from __future__ import annotations",
"import datetime",
"import enum",
"import functools as ftz",
"import itertools as itz",
"import logging as logmod",
"import pathlib as pl",
"from uuid import UUID, uuid1",
"from typing import (TYPE_CHECKING, Any, Callable, ClassVar, Final, Generic, Iterable, Iterator, Mapping, Match, MutableMapping, Protocol, Sequence, Tuple, TypeAlias, TypeGuard, TypeVar, cast, final, overload, runtime_checkable, Generator)",
]

##-- end isort
